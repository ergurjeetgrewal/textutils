{"version":3,"sources":["components/About.js","components/Navbar.js","components/textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","mystyle","setMystyle","BtnText","setBtnText","className","style","href","onClick","border","Navbar","props","mode","title","type","id","toggleMode","htmlFor","TextForm","text","setText","heading","rows","value","onChange","event","target","toUpperCase","setalert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","Alert","alert","role","msg","defaultProps","App","setmode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.80dbbf85.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function About() {\r\n    const [mystyle, setMystyle] = useState(\r\n        {\r\n            color: 'black',\r\n            backgroundColor: 'white'\r\n        }\r\n    )\r\n    const [BtnText, setBtnText] = useState(\"Enable Dark Mode\")\r\n    const toggleStyle = ()=>{\r\n        if(mystyle.color === 'black'){\r\n            setMystyle({\r\n                color: 'white',\r\n                backgroundColor: 'black',\r\n                border: '1px solid white'\r\n            })\r\n            setBtnText(\"Enable Light Mode\")\r\n        }\r\n        else{\r\n            setMystyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            })\r\n            setBtnText(\"Enable Dark Mode\")\r\n        }\r\n    }\r\n    return (\r\n        <div className='container my-2' style={mystyle}>\r\n            <div className=\"card text-center\" style={mystyle}>\r\n                <h1>About Us</h1>\r\n                <div className=\"card-header\">\r\n                    Featured\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Special title treatment</h5>\r\n                    <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                    <a href=\"/\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    {/* <Link to=\"/\" className=\"btn btn-primary\">Go somewhere</Link> */}\r\n                </div>\r\n                <div className=\"card-footer text-muted\">\r\n                    2 days ago\r\n                </div>\r\n            </div>\r\n                <button className=\"btn btn-primary my-2\" onClick={toggleStyle}>{BtnText}</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/about\">About</a>\r\n                            {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\r\n                        </li>\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string.isRequired }\r\nNavbar.defaultProps = { title: 'Set title here' }","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log('uppercase was clicked'+text);\r\n        setText(text.toUpperCase());\r\n        props.setalert('Converted to upper case', 'success');\r\n    }\r\n    const handledownClick = () => {\r\n        // console.log('uppercase was clicked'+text);\r\n        setText(text.toLowerCase());\r\n        props.setalert('Converted to lower case', 'success');\r\n    }\r\n    const handleOnchange = (event) => {\r\n        // console.log('text data was changed');\r\n        setText(event.target.value);\r\n    }\r\n    const handleClearclick = () => {\r\n        setText('');\r\n        props.setalert('Text Cleared!', 'success');\r\n    }\r\n    const handleCopy = () => {\r\n        let text = document.getElementById('mybox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.setalert('Text Selected to clipboard!', 'success');\r\n    }\r\n    const handleExtraspaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.setalert('Extra Spaces removed!', 'success');\r\n    }\r\n    const [text, setText] = useState('')\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1 className=\"mt-2\">{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" rows='8' id=\"mybox\" value={text} onChange={handleOnchange} style={{ backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }}></textarea>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to uppercase</button>\r\n                <button type=\"submit\" className=\"btn btn-primary mx-1\" onClick={handledownClick}>Convert to lowercase</button>\r\n                <button type=\"submit\" className=\"btn btn-primary mx-1\" onClick={handleClearclick}>Clear Box</button>\r\n                <button type=\"submit\" className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n                <button type=\"submit\" className=\"btn btn-primary mx-1\" onClick={handleExtraspaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-2\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(' ').length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(' ').length} Minutes required to read whole paragraph</p>\r\n                <h3>Preview</h3>\r\n                <p>{text.length > 0 ? text : 'Enter something above to preview'}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert &&\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.msg}</strong>\r\n            </div>\r\n    )\r\n}\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");//whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null)\n\n  const setalert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#26273a';\n      setalert('Dark Mode has been enabled', 'success');\n      document.title = \"Textutils Home - darkmode\"\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      setalert('Light Mode has been enabled', 'success');\n      document.title = \"Textutils Home\"\n    }\n  }\n  return (\n    // <Router>\n    // <>\n    //   <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    //   <Alert alert={alert} />\n    //   <Switch>\n    //     <Route exact path=\"/about\">\n    //       <About />\n    //     </Route>\n    //     <Route exact path=\"/\">\n    //       <TextForm heading=\"Enter the text below to analyze\" setalert={setalert} mode={mode} />\n    //     </Route>\n    //   </Switch>\n    // </>\n    // </Router>\n    <>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <TextForm heading=\"Enter the text below to analyze\" setalert={setalert} mode={mode} />\n      <About/>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}